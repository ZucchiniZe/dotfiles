#!/bin/bash

PIDNAME=recorder
FRAMERATE=25
DISPLAYS=$(xrandr | awk '/ connected/ { print (i++)+1, $1, $3 }')
FULL_SCREEN=$(xdpyinfo | grep dimensions | awk '{print $2}')
SELECTED_DISPLAY=0
SELECT=0

usage() {
  cat <<EOF
Usage $(basename $0) [-fslkh] [-d DISPLAY] <FILE>
Record the screen using ffmpeg and slop for selection

Selecting displays is iffy, you need to edit script for it to work

  -f          Set the framerate to 50
  -s          Select window using slop
  -l          List available displays
  -d DISPLAY  Record DISPLAY display
  -h          This help menu
  -k          Kill record process
EOF
  exit 1
}

OPTIND=1
while getopts 'fskd:lh' opt; do
  case "$opt" in
    f) FRAMERATE=50 ;;
    s) SELECT=1 ;;
    d) SELECTED_DISPLAY=$OPTARG ;;
    l) echo "$DISPLAYS" | cut -d+ -f1; exit 0 ;;
    k) kill $(pidof -s $PIDNAME) ;;
    h) usage ;;
  esac
done
shift "$((OPTIND-1))"

test -n "$1" && WEBM=$1 || usage

echo Framerate: $FRAMERATE

if [[ $SELECTED_DISPLAY -ne 0 ]]; then
  SIZE=$(echo "$DISPLAYS" | awk NR==$SELECTED_DISPLAY | awk '{print $3}')

  XY=$(echo "$SIZE" | awk -F+ '{print $1}')
  X=$(echo $XY | cut -d'x' -f1)
  Y=$(echo $XY | cut -d'x' -f2)

  WH=$(echo "$SIZE" | cut -d+ -f2-3)
  W=$(echo $WH | cut -d+ -f1)
  H=$(echo $WH | cut -d+ -f2)

  echo Display: $XY
  exec -a $PIDNAME ffmpeg -f x11grab -video_size $XY -an -r $FRAMERATE -i ":0.0+$W,$H" -c:v libvpx -b:v 5M -crf 10 -quality realtime -y -loglevel quiet $1
  exit 0
fi

if [[ $SELECT -ne 0 ]]; then
  eval $(slop)
  exec -a $PIDNAME ffmpeg -f x11grab -s "$W"x"$H" -an -r $FRAMERATE -i ":0.0+$X,$Y" -c:v libvpx -b:v 5M -crf 10 -quality realtime -y -loglevel quiet $1
  exit 0
fi

exec -a $PIDNAME ffmpeg -f x11grab -video_size $FULL_SCREEN -an -r $FRAMERATE -i ":0.0" -c:v libvpx -b:v 5M -crf 10 -quality realtime -y -loglevel quiet $1
